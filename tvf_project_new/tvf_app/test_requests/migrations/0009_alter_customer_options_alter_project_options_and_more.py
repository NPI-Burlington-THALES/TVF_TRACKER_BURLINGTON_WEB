# Generated by Django 5.2.2 on 2025-06-15 03:02

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('test_requests', '0008_alter_trustportfolder_folder_path'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='customer',
            options={'ordering': ['name'], 'verbose_name': 'Customer', 'verbose_name_plural': 'Customers'},
        ),
        migrations.AlterModelOptions(
            name='project',
            options={'ordering': ['customer__name', 'name', 'tvf_environment__name'], 'verbose_name': 'Project', 'verbose_name_plural': 'Projects'},
        ),
        migrations.AlterModelOptions(
            name='testrequest',
            options={'ordering': ['-tvf_number'], 'permissions': [], 'verbose_name': 'Test Request (TVF)', 'verbose_name_plural': 'Test Requests (TVFs)'},
        ),
        migrations.AlterModelOptions(
            name='testrequestinputfile',
            options={'ordering': ['file_name'], 'verbose_name': 'Input File Entry', 'verbose_name_plural': 'Input File Entries'},
        ),
        migrations.AlterModelOptions(
            name='testrequestpan',
            options={'ordering': ['pan_truncated'], 'verbose_name': 'TVF PAN', 'verbose_name_plural': 'TVF PANs'},
        ),
        migrations.AlterModelOptions(
            name='testrequestphasedefinition',
            options={'ordering': ['order'], 'verbose_name': 'TVF Phase Definition', 'verbose_name_plural': 'TVF Phase Definitions'},
        ),
        migrations.AlterModelOptions(
            name='testrequestphaselog',
            options={'ordering': ['start_time'], 'verbose_name': 'TVF Phase Log', 'verbose_name_plural': 'TVF Phase Logs'},
        ),
        migrations.AlterModelOptions(
            name='testrequestplasticcode',
            options={'ordering': ['plastic_code_lookup__code', 'manual_plastic_code'], 'verbose_name': 'Plastic Code Entry', 'verbose_name_plural': 'Plastic Code Entries'},
        ),
        migrations.AlterModelOptions(
            name='testrequestquality',
            options={'ordering': ['test_request__tvf_number'], 'verbose_name': 'Quality Check', 'verbose_name_plural': 'Quality Checks'},
        ),
        migrations.AlterModelOptions(
            name='testrequestshipping',
            options={'ordering': ['dispatch_method__name'], 'verbose_name': 'Shipping Information', 'verbose_name_plural': 'Shipping Information'},
        ),
        migrations.AlterUniqueTogether(
            name='plasticcodelookup',
            unique_together=set(),
        ),
        migrations.AlterUniqueTogether(
            name='project',
            unique_together=set(),
        ),
        migrations.AlterUniqueTogether(
            name='testrequestplasticcode',
            unique_together=set(),
        ),
        migrations.AlterUniqueTogether(
            name='trustportfolder',
            unique_together=set(),
        ),
        migrations.AlterUniqueTogether(
            name='dispatchmethod',
            unique_together={('customer', 'project', 'name')},
        ),
        migrations.RemoveField(
            model_name='testrequest',
            name='last_updated_by',
        ),
        migrations.RemoveField(
            model_name='testrequest',
            name='last_updated_date',
        ),
        migrations.RemoveField(
            model_name='testrequestphaselog',
            name='action',
        ),
        migrations.RemoveField(
            model_name='testrequestphaselog',
            name='new_phase',
        ),
        migrations.RemoveField(
            model_name='testrequestphaselog',
            name='new_status',
        ),
        migrations.RemoveField(
            model_name='testrequestphaselog',
            name='old_phase',
        ),
        migrations.RemoveField(
            model_name='testrequestphaselog',
            name='old_status',
        ),
        migrations.RemoveField(
            model_name='testrequestphaselog',
            name='timestamp',
        ),
        migrations.RemoveField(
            model_name='testrequestphaselog',
            name='tvf',
        ),
        migrations.RemoveField(
            model_name='testrequestphaselog',
            name='user',
        ),
        migrations.AddField(
            model_name='customer',
            name='contact_person',
            field=models.CharField(blank=True, help_text='Primary contact person for the customer', max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='customer',
            name='email',
            field=models.EmailField(blank=True, help_text='Contact email for the customer', max_length=254, null=True),
        ),
        migrations.AddField(
            model_name='customer',
            name='phone',
            field=models.CharField(blank=True, help_text='Contact phone number for the customer', max_length=50, null=True),
        ),
        migrations.AddField(
            model_name='project',
            name='dispatch_method_default',
            field=models.CharField(blank=True, help_text='Default dispatch method for this project', max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='project',
            name='trustport_folder_base',
            field=models.CharField(blank=True, help_text='Base Trustport folder for data processing for this project', max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='testrequest',
            name='last_status_update',
            field=models.DateTimeField(auto_now=True, help_text='Automatically updated timestamp of the last status change'),
        ),
        migrations.AddField(
            model_name='testrequestphaselog',
            name='end_time',
            field=models.DateTimeField(blank=True, help_text='When the TVF exited this phase', null=True),
        ),
        migrations.AddField(
            model_name='testrequestphaselog',
            name='phase_name',
            field=models.ForeignKey(default=1, help_text='The phase/department name', on_delete=django.db.models.deletion.PROTECT, to='test_requests.testrequestphasedefinition'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='testrequestphaselog',
            name='responsible_user',
            field=models.ForeignKey(blank=True, help_text='User responsible during this phase', null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='testrequestphaselog',
            name='start_time',
            field=models.DateTimeField(default=django.utils.timezone.now, help_text='When the TVF entered this phase'),
        ),
        migrations.AddField(
            model_name='testrequestphaselog',
            name='test_request',
            field=models.ForeignKey(default=1, help_text='The TVF for this phase log', on_delete=django.db.models.deletion.CASCADE, related_name='phase_logs', to='test_requests.testrequest'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='customer',
            name='name',
            field=models.CharField(help_text='Name of the customer', max_length=255, unique=True),
        ),
        migrations.AlterField(
            model_name='customer',
            name='sla_days',
            field=models.IntegerField(default=0, help_text='Service Level Agreement in days for this customer (for analytics)'),
        ),
        migrations.AlterField(
            model_name='dispatchmethod',
            name='customer',
            field=models.ForeignKey(blank=True, help_text='The customer this dispatch method is available for', null=True, on_delete=django.db.models.deletion.PROTECT, to='test_requests.customer'),
        ),
        migrations.AlterField(
            model_name='dispatchmethod',
            name='name',
            field=models.CharField(help_text='Name of the dispatch method', max_length=255),
        ),
        migrations.AlterField(
            model_name='dispatchmethod',
            name='project',
            field=models.ForeignKey(blank=True, help_text='The project this dispatch method is available for', null=True, on_delete=django.db.models.deletion.PROTECT, to='test_requests.project'),
        ),
        migrations.AlterField(
            model_name='plasticcodelookup',
            name='code',
            field=models.CharField(help_text="The unique plastic code (e.g., '01200733')", max_length=155, unique=True),
        ),
        migrations.AlterField(
            model_name='plasticcodelookup',
            name='customer',
            field=models.ForeignKey(help_text='The customer this plastic code belongs to', on_delete=django.db.models.deletion.PROTECT, to='test_requests.customer'),
        ),
        migrations.AlterField(
            model_name='plasticcodelookup',
            name='description',
            field=models.TextField(blank=True, help_text='Description of the plastic code', null=True),
        ),
        migrations.AlterField(
            model_name='plasticcodelookup',
            name='project',
            field=models.ForeignKey(help_text='The project this plastic code is used in', on_delete=django.db.models.deletion.PROTECT, to='test_requests.project'),
        ),
        migrations.AlterField(
            model_name='plasticcodelookup',
            name='tvf_environment',
            field=models.ForeignKey(help_text='The TVF environment for this plastic code', on_delete=django.db.models.deletion.PROTECT, to='test_requests.tvfenvironment'),
        ),
        migrations.AlterField(
            model_name='project',
            name='customer',
            field=models.ForeignKey(help_text='The customer associated with this project', on_delete=django.db.models.deletion.PROTECT, to='test_requests.customer'),
        ),
        migrations.AlterField(
            model_name='project',
            name='name',
            field=models.CharField(help_text='Name of the project', max_length=255),
        ),
        migrations.AlterField(
            model_name='project',
            name='tvf_environment',
            field=models.ForeignKey(help_text='The TVF environment for this project', on_delete=django.db.models.deletion.PROTECT, to='test_requests.tvfenvironment'),
        ),
        migrations.AlterField(
            model_name='rejectreason',
            name='description',
            field=models.TextField(blank=True, help_text='Detailed description of the reason', null=True),
        ),
        migrations.AlterField(
            model_name='rejectreason',
            name='reason',
            field=models.CharField(help_text='Reason for rejecting a TVF', max_length=255, unique=True),
        ),
        migrations.AlterField(
            model_name='testrequest',
            name='comments',
            field=models.TextField(blank=True, help_text='General comments for the TVF', null=True),
        ),
        migrations.AlterField(
            model_name='testrequest',
            name='cr_number',
            field=models.CharField(blank=True, help_text='Change Request Number from requestor', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='testrequest',
            name='current_phase',
            field=models.ForeignKey(blank=True, help_text='Current phase of the TVF lifecycle', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='current_tvfs', to='test_requests.testrequestphasedefinition'),
        ),
        migrations.AlterField(
            model_name='testrequest',
            name='customer',
            field=models.ForeignKey(help_text='The customer for this TVF', on_delete=django.db.models.deletion.PROTECT, related_name='test_requests', to='test_requests.customer'),
        ),
        migrations.AlterField(
            model_name='testrequest',
            name='d_code',
            field=models.CharField(blank=True, help_text='D-Code for the TVF', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='testrequest',
            name='is_rejected',
            field=models.BooleanField(default=False, help_text='Indicates if the TVF has been rejected'),
        ),
        migrations.AlterField(
            model_name='testrequest',
            name='pin_config_version',
            field=models.CharField(blank=True, help_text='PIN Configuration Version', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='testrequest',
            name='pres_config_version',
            field=models.CharField(blank=True, help_text='Personalization Configuration Version', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='testrequest',
            name='proc_config_version',
            field=models.CharField(blank=True, help_text='Processing Configuration Version', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='testrequest',
            name='project',
            field=models.ForeignKey(help_text='The project for this TVF', on_delete=django.db.models.deletion.PROTECT, related_name='test_requests', to='test_requests.project'),
        ),
        migrations.AlterField(
            model_name='testrequest',
            name='rejected_by',
            field=models.ForeignKey(blank=True, help_text='User who rejected the TVF', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='rejected_tvfs', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='testrequest',
            name='rejected_comments',
            field=models.TextField(blank=True, help_text='Additional comments for rejection', null=True),
        ),
        migrations.AlterField(
            model_name='testrequest',
            name='rejected_date',
            field=models.DateTimeField(blank=True, help_text='Date and time of rejection', null=True),
        ),
        migrations.AlterField(
            model_name='testrequest',
            name='rejected_reason',
            field=models.ForeignKey(blank=True, help_text='Reason for rejection', null=True, on_delete=django.db.models.deletion.PROTECT, to='test_requests.rejectreason'),
        ),
        migrations.AlterField(
            model_name='testrequest',
            name='request_received_date',
            field=models.DateTimeField(help_text='Date and time when the request was received/submitted'),
        ),
        migrations.AlterField(
            model_name='testrequest',
            name='request_ship_date',
            field=models.DateTimeField(blank=True, help_text='Requested ship date for the TVF (for SLA tracking)', null=True),
        ),
        migrations.AlterField(
            model_name='testrequest',
            name='run_today',
            field=models.BooleanField(default=False, help_text='Indicates if this TVF is scheduled to run today.'),
        ),
        migrations.AlterField(
            model_name='testrequest',
            name='s_code',
            field=models.CharField(blank=True, help_text='S-Code for the TVF', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='testrequest',
            name='status',
            field=models.ForeignKey(help_text='Current status of the TVF', on_delete=django.db.models.deletion.PROTECT, related_name='test_requests_by_status', to='test_requests.tvfstatus'),
        ),
        migrations.AlterField(
            model_name='testrequest',
            name='trustport_folder_actual',
            field=models.ForeignKey(blank=True, help_text='Actual Trustport folder used for this specific TVF', null=True, on_delete=django.db.models.deletion.PROTECT, to='test_requests.trustportfolder'),
        ),
        migrations.AlterField(
            model_name='testrequest',
            name='tvf_completed_date',
            field=models.DateTimeField(blank=True, help_text='Actual date and time when the TVF was completed', null=True),
        ),
        migrations.AlterField(
            model_name='testrequest',
            name='tvf_environment',
            field=models.ForeignKey(help_text='The environment for this TVF (e.g., PAT)', on_delete=django.db.models.deletion.PROTECT, related_name='test_requests', to='test_requests.tvfenvironment'),
        ),
        migrations.AlterField(
            model_name='testrequest',
            name='tvf_initiator',
            field=models.ForeignKey(help_text='The user who initiated this TVF', on_delete=django.db.models.deletion.PROTECT, related_name='initiated_tvfs', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='testrequest',
            name='tvf_name',
            field=models.CharField(help_text='Name of the TVF', max_length=255),
        ),
        migrations.AlterField(
            model_name='testrequest',
            name='tvf_number',
            field=models.IntegerField(db_index=True, default=1, editable=False, help_text='Unique auto-incrementing TVF Number', unique=True),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='testrequest',
            name='tvf_pin_mailer',
            field=models.BooleanField(default=False, help_text='Indicates if this TVF is for a PIN mailer'),
        ),
        migrations.AlterField(
            model_name='testrequest',
            name='tvf_type',
            field=models.ForeignKey(help_text='The type of TVF', on_delete=django.db.models.deletion.PROTECT, related_name='test_requests', to='test_requests.tvftype'),
        ),
        migrations.AlterField(
            model_name='testrequestinputfile',
            name='card_co',
            field=models.CharField(blank=True, help_text='Card Control Order', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='testrequestinputfile',
            name='card_qty',
            field=models.IntegerField(default=0, help_text='Quantity of cards in this input file'),
        ),
        migrations.AlterField(
            model_name='testrequestinputfile',
            name='card_wo',
            field=models.CharField(blank=True, help_text='Card Work Order', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='testrequestinputfile',
            name='date_file_received',
            field=models.DateTimeField(blank=True, help_text='Date and time when this input file was received', null=True),
        ),
        migrations.AlterField(
            model_name='testrequestinputfile',
            name='file_name',
            field=models.CharField(help_text='Name of the input file', max_length=255),
        ),
        migrations.AlterField(
            model_name='testrequestinputfile',
            name='pin_co',
            field=models.CharField(blank=True, help_text='PIN Control Order', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='testrequestinputfile',
            name='pin_qty',
            field=models.IntegerField(default=0, help_text='Quantity of PINs expected in this input file'),
        ),
        migrations.AlterField(
            model_name='testrequestinputfile',
            name='pin_wo',
            field=models.CharField(blank=True, help_text='PIN Work Order', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='testrequestinputfile',
            name='test_request',
            field=models.ForeignKey(help_text='The TVF this input file entry belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='input_files_entries', to='test_requests.testrequest'),
        ),
        migrations.AlterField(
            model_name='testrequestpan',
            name='is_available',
            field=models.BooleanField(default=False, help_text="Indicates if the PAN is available (from 'Avble' in zc_tvfpans)"),
        ),
        migrations.AlterField(
            model_name='testrequestpan',
            name='pan_truncated',
            field=models.CharField(help_text='Truncated Primary Account Number (e.g., XXXXXXXXXXXX7067)', max_length=255),
        ),
        migrations.AlterField(
            model_name='testrequestpan',
            name='test_request_input_file',
            field=models.ForeignKey(help_text='The specific input file this PAN belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='pans', to='test_requests.testrequestinputfile'),
        ),
        migrations.AlterField(
            model_name='testrequestphasedefinition',
            name='name',
            field=models.CharField(help_text='Name of the phase (e.g., Data Entry, Personalization, Quality, Shipping)', max_length=255, unique=True),
        ),
        migrations.AlterField(
            model_name='testrequestphasedefinition',
            name='order',
            field=models.IntegerField(help_text='Order in which phases typically occur', unique=True),
        ),
        migrations.AlterField(
            model_name='testrequestphaselog',
            name='comments',
            field=models.TextField(blank=True, help_text='Comments on this phase transition', null=True),
        ),
        migrations.AlterField(
            model_name='testrequestplasticcode',
            name='manual_plastic_code',
            field=models.CharField(blank=True, help_text='Manually entered plastic code if not in lookup.', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='testrequestplasticcode',
            name='plastic_code_lookup',
            field=models.ForeignKey(blank=True, help_text='The specific plastic code used', null=True, on_delete=django.db.models.deletion.PROTECT, to='test_requests.plasticcodelookup'),
        ),
        migrations.AlterField(
            model_name='testrequestplasticcode',
            name='quantity',
            field=models.IntegerField(help_text='Quantity for this plastic code'),
        ),
        migrations.AlterField(
            model_name='testrequestplasticcode',
            name='test_request',
            field=models.ForeignKey(help_text='The TVF this plastic code entry belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='plastic_codes_entries', to='test_requests.testrequest'),
        ),
        migrations.AlterField(
            model_name='testrequestplasticcode',
            name='thermal_colour',
            field=models.CharField(blank=True, help_text='Thermal color associated with this plastic code', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='testrequestquality',
            name='checked_against_specifications',
            field=models.BooleanField(default=False, help_text='Checked against specifications being tested'),
        ),
        migrations.AlterField(
            model_name='testrequestquality',
            name='output_accordance_request',
            field=models.BooleanField(default=False, help_text='Output in accordance with request'),
        ),
        migrations.AlterField(
            model_name='testrequestquality',
            name='quality_sign_off_by',
            field=models.ForeignKey(blank=True, help_text='User who signed off on quality', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='quality_signed_off_tvfs', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='testrequestquality',
            name='quality_sign_off_date',
            field=models.DateTimeField(blank=True, help_text='Date and time of quality sign off', null=True),
        ),
        migrations.AlterField(
            model_name='testrequestquality',
            name='test_request',
            field=models.OneToOneField(help_text='The TVF this quality check is for', on_delete=django.db.models.deletion.CASCADE, related_name='quality_details', to='test_requests.testrequest'),
        ),
        migrations.AlterField(
            model_name='testrequestshipping',
            name='date_shipped',
            field=models.DateTimeField(blank=True, help_text='Date and time when the TVF was shipped', null=True),
        ),
        migrations.AlterField(
            model_name='testrequestshipping',
            name='dispatch_method',
            field=models.ForeignKey(blank=True, help_text='Method of dispatch (e.g., XPRESSPOST)', null=True, on_delete=django.db.models.deletion.PROTECT, to='test_requests.dispatchmethod'),
        ),
        migrations.AlterField(
            model_name='testrequestshipping',
            name='ship_to_address_1',
            field=models.CharField(blank=True, help_text='Address Line 1', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='testrequestshipping',
            name='ship_to_address_2',
            field=models.CharField(blank=True, help_text='Address Line 2', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='testrequestshipping',
            name='ship_to_address_3',
            field=models.CharField(blank=True, help_text='Address Line 3', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='testrequestshipping',
            name='ship_to_business_name',
            field=models.CharField(blank=True, help_text='Business Name', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='testrequestshipping',
            name='ship_to_city',
            field=models.CharField(blank=True, help_text='City', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='testrequestshipping',
            name='ship_to_country',
            field=models.CharField(blank=True, help_text='Country', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='testrequestshipping',
            name='ship_to_name',
            field=models.CharField(blank=True, help_text='Recipient Name', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='testrequestshipping',
            name='ship_to_postal_code',
            field=models.CharField(blank=True, help_text='Postal Code', max_length=20, null=True),
        ),
        migrations.AlterField(
            model_name='testrequestshipping',
            name='ship_to_state_province',
            field=models.CharField(blank=True, help_text='State/Province', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='testrequestshipping',
            name='shipping_sign_off_by',
            field=models.ForeignKey(blank=True, help_text='User who signed off on shipping', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='shipping_signed_off_tvfs', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='testrequestshipping',
            name='test_request',
            field=models.OneToOneField(help_text='The TVF this shipping info is for', on_delete=django.db.models.deletion.CASCADE, related_name='shipping_details', to='test_requests.testrequest'),
        ),
        migrations.AlterField(
            model_name='testrequestshipping',
            name='tracking_number',
            field=models.CharField(blank=True, help_text='Tracking number for the shipment', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='trustportfolder',
            name='customer',
            field=models.ForeignKey(help_text='The customer this Trustport folder belongs to', on_delete=django.db.models.deletion.PROTECT, to='test_requests.customer'),
        ),
        migrations.AlterField(
            model_name='trustportfolder',
            name='folder_path',
            field=models.CharField(help_text='The actual Trustport folder path', max_length=500),
        ),
        migrations.AlterField(
            model_name='trustportfolder',
            name='project',
            field=models.ForeignKey(help_text='The project this Trustport folder belongs to', on_delete=django.db.models.deletion.PROTECT, to='test_requests.project'),
        ),
        migrations.AlterField(
            model_name='tvfenvironment',
            name='name',
            field=models.CharField(help_text='Name of the TVF environment (e.g., PAT, UAT, PROD)', max_length=255, unique=True),
        ),
        migrations.AlterField(
            model_name='tvfstatus',
            name='name',
            field=models.CharField(help_text='Name of the TVF status', max_length=255, unique=True),
        ),
        migrations.AlterField(
            model_name='tvftype',
            name='name',
            field=models.CharField(help_text='Name of the TVF type', max_length=255, unique=True),
        ),
        migrations.AlterUniqueTogether(
            name='project',
            unique_together={('customer', 'name', 'tvf_environment')},
        ),
        migrations.AlterUniqueTogether(
            name='testrequestinputfile',
            unique_together={('test_request', 'file_name')},
        ),
        migrations.AlterUniqueTogether(
            name='trustportfolder',
            unique_together={('customer', 'project', 'folder_path')},
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True, help_text='When the change occurred')),
                ('action', models.CharField(help_text="Type of action (e.g., 'created', 'updated', 'deleted')", max_length=255)),
                ('model_name', models.CharField(help_text='Name of the model that was changed', max_length=255)),
                ('record_id', models.CharField(help_text='ID of the record that was changed', max_length=255)),
                ('field_name', models.CharField(blank=True, help_text='Specific field that was changed (if applicable)', max_length=255, null=True)),
                ('old_value', models.TextField(blank=True, help_text='Old value of the field (if applicable)', null=True)),
                ('new_value', models.TextField(blank=True, help_text='New value of the field (if applicable)', null=True)),
                ('change_details', models.TextField(blank=True, help_text='JSON or text details of the change', null=True)),
                ('user', models.ForeignKey(blank=True, help_text='User who made the change', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Audit Log',
                'verbose_name_plural': 'Audit Logs',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.RemoveField(
            model_name='dispatchmethod',
            name='description',
        ),
    ]
